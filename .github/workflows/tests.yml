name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.type }}
  cancel-in-progress: true

on:
  push:

jobs:
    packages:
        name: Test on ${{ matrix.os }} (${{ matrix.python }})
        runs-on: ${{ matrix.os }}
        env:
          PREFIX: /tmp/pkgs
          CPPFLAGS: -I/tmp/pkgs/include
          LDFLAGS: -L/tmp/pkgs/lib
        strategy:
          fail-fast: true
          matrix:
            os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
            python: ["3.8", "3.9", "3.10", "3.11", "3.x"]

        steps:
        - uses: actions/checkout@v4

        - name: Install Python
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python }}

        - name: Install libhdf4-dev (macos-latest)
          if: matrix.os == 'macos-latest'
          run: |
              brew install gcc@12 ninja &&
              export MACOSX_DEPLOYMENT_TARGET=11.0 &&
              export CC=gcc-12 &&
              export CXX=g++-12 &&
              cd /tmp &&
              curl -O http://www.ijg.org/files/jpegsrc.v9e.tar.gz &&
              tar -xzf jpegsrc.v9e.tar.gz &&
              cd jpeg-9e &&
              ./configure --prefix=$PREFIX &&
              make &&
              make install &&
              cd .. &&
              git clone --depth 1 --branch hdf-4_2_16 https://github.com/HDFGroup/hdf4.git &&
              mkdir build && cd build &&
              ../hdf4/configure --enable-hdf4-xdr --enable-shared --disable-static --disable-fortran --disable-netcdf --enable-production --with-zlib --prefix=$PREFIX &&
              make install

        - name: Install libhdf4-dev (ubuntu-latest)
          if: matrix.os == 'ubuntu-latest'
          run: sudo apt-get install libhdf4-dev

        - name: Setup conda (windows-latest)
          if: matrix.os == 'windows-latest'
          uses: s-weigand/setup-conda@v1

        - name: Install libhdf4-dev (windows-latest)
          if: matrix.os == 'windows-latest'
          run: |
            conda config --set always_yes yes --set changeps1 no --set auto_update_conda no --set safety_checks disabled
            conda install -q hdf4
            echo "LIBRARY_DIRS=C:\Miniconda\Library\lib;C:\Miniconda\Library\bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            echo "INCLUDE_DIRS=C:\Miniconda\Library\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

        - name: Install requirements
          run: |
            python -m pip install -U pip
            python -m pip install numpy pytest

        - name: Run tests
          run: |
            pip install -e .
            pytest
            python examples/runall.py
